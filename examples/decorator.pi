
func decor1(fn) {
    func wrapper() {
        print("decor1 before")
        fn()
        print("decor1 after")
    }
    return wrapper
}

func decor2(fn) {
    return func() {
        print("decor2 before")
        fn()
        print("decor2 after")
    }
}

@decor1
@decor2
func hello() {
    print("hello")
}

hello()

func decor1(fn) {
	return func(*args, **kwargs) {
		print('decor1 before')
		fn(*args, **kwargs)
		print('decor1 after')
	}
}

func decor2(fn) {
	return func(*args, **kwargs) {
		print('decor2 before')
		fn(*args, **kwargs)
		print('decor2 after')
	}
}

@decor1
@decor2
func hello(*args, **kwargs) {
	print(args)
	print(kwargs)
}

hello(1, 2, 3, name='jack', age=18)


func decor(fn) {
    func wrapper() {
        print("decor before")
        fn()
        print("decor after")
    }
    return wrapper
}

class Foo {
    func __init__(name) {
        this.name = name
    }

    @decor
    func name() {
        print(this.name)
    }
}

f = Foo("foo")
f.name()
